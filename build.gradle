buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = "0.7.0"
group = "crimson_twilight.immersive_energy" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "immersive_energy"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

repositories {
    maven { name = "BlameJared";    url = "https://maven.blamejared.com/" }         // IE & CT Files
    maven { name = "DVS1 Maven FS"; url = "https://dvs1.progwml6.com/files/maven" } // JEI & Tinkers Files
    maven { url = 'https://maven.latmod.com/' }                                     // Needed for JEI
}

sourceSets {
    main {
        resources {
            srcDirs = [
                    "$rootDir/src/main/resources",
                    "$rootDir/src/generated/resources"
            ]
        }
    }
}


minecraft {
    mappings channel: 'snapshot', version: '20210309-1.16.5'

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'info'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.disableRefMap', 'true'

            mods {
                immersive_energy {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'info'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.disableRefMap', 'true'

            arg '-nogui'

            mods {
                immersive_energy {
                    source sourceSets.main
                }
            }
        }
    }
}



dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'
    compile fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.5-5.0.0-pre.36")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.1.75")
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.6.1.75:api")
}

//dependencies {
//    deobfCompile "team.chisel.ctm:CTM:MC1.12.2-1.0.2.31"
//    deobfCompile "blusunrize:ImmersiveEngineering:0.12-92-+"
//    // compile against the JEI API but do not include it at runtime
//    compileOnly "mezz.jei:jei_1.12.2:4.16.1.301:api"
//    // at runtime, use the full JEI jar
//    runtimeOnly "mezz.jei:jei_1.12.2:4.16.1.301"
//    deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.8.468"
//    compileOnly "albedo:albedo:0.1.3"
//    deobfCompile "serene-seasons:SereneSeasons-1.12.2:1.2.18:universal"
//    //Maybe someday...
//    //deobfCompile "albedo:albedo:1.12.2:1.1.0"
//    deobfCompile 'baubles:Baubles:1.12:1.5.2'
//    //compileOnly "curse.maven:immersive-petroleum-268250:2544919"
//    compile "pl.pabilo8.immersiveintelligence:immersiveintelligence-0.2.0"
//}


processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
    outputs.upToDateWhen { false }
}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "immersive_energy",
                "Specification-Vendor"    : "crimson_twilight",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "IG Team",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) { type 'jar'; builtBy 'reobfJar'; }

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}